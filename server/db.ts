// –í—Å–µ–≥–¥–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
import 'dotenv/config';
import { Pool, neonConfig } from '@neondatabase/serverless';
import { drizzle } from 'drizzle-orm/neon-serverless';
import ws from "ws";
import * as schema from "@shared/schema";

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WebSocket –¥–ª—è Neon —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ ws –¥–æ—Å—Ç—É–ø–µ–Ω
try {
  if (typeof ws !== 'undefined') {
    neonConfig.webSocketConstructor = ws;
  }
} catch (error) {
  console.warn('‚ö†Ô∏è WebSocket –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º HTTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î');
}

const DATABASE_URL = process.env.DATABASE_URL;

if (!DATABASE_URL) {
  throw new Error('‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª.');
}

console.log(`üóÑÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º PostgreSQL (Neon)`);
console.log(`üìç Database host: ${new URL(DATABASE_URL).hostname}`);

const pool = new Pool({ 
  connectionString: DATABASE_URL,
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
  max: 20,                    // –ú–∞–∫—Å–∏–º—É–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –≤ –ø—É–ª–µ
  min: 2,                     // –ú–∏–Ω–∏–º—É–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –≤ –ø—É–ª–µ
  idleTimeoutMillis: 30000,   // 30 —Å–µ–∫—É–Ω–¥ –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  connectionTimeoutMillis: 10000, // 10 —Å–µ–∫—É–Ω–¥ –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  keepAlive: true,            // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∂–∏–≤—ã–º–∏
  keepAliveInitialDelayMillis: 0
});
const db = drizzle({ client: pool, schema });

export { pool, db };