// –í—Å–µ–≥–¥–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
import 'dotenv/config';
import { Pool, neonConfig } from '@neondatabase/serverless';
import { drizzle } from 'drizzle-orm/neon-serverless';
import ws from "ws";
import * as schema from "@shared/schema";

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WebSocket –¥–ª—è Neon —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ ws –¥–æ—Å—Ç—É–ø–µ–Ω
try {
  if (typeof ws !== 'undefined') {
    neonConfig.webSocketConstructor = ws;
  }
} catch (error) {
  console.warn('‚ö†Ô∏è WebSocket –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º HTTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î');
}

const DATABASE_URL = process.env.DATABASE_URL;

if (!DATABASE_URL) {
  throw new Error('‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª.');
}

console.log(`üóÑÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º PostgreSQL (Neon)`);
console.log(`üìç Database host: ${new URL(DATABASE_URL).hostname}`);

const pool = new Pool({ connectionString: DATABASE_URL });
const db = drizzle({ client: pool, schema });

export { pool, db };