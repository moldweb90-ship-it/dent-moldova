import "dotenv/config";
import { db } from "../server/db";
import { cities, districts } from "@shared/schema";
import { eq } from "drizzle-orm";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è slug'–∞
function createSlug(name: string, isRussian: boolean = false): string {
  let slug = name.toLowerCase();
  
  if (isRussian) {
    // –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è –¥–ª—è —Ä—É—Å—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
    const translitMap: Record<string, string> = {
      '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'e',
      '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm',
      '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u',
      '—Ñ': 'f', '—Ö': 'h', '—Ü': 'ts', '—á': 'ch', '—à': 'sh', '—â': 'sch',
      '—ä': '', '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya'
    };
    
    slug = slug.split('').map(char => translitMap[char] || char).join('');
  } else {
    // –î–ª—è —Ä—É–º—ã–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
    slug = slug
      .replace(/ƒÉ/g, 'a')
      .replace(/√¢/g, 'a')
      .replace(/√Æ/g, 'i')
      .replace(/»ô/g, 's')
      .replace(/»õ/g, 't');
  }
  
  return slug
    .replace(/[^a-z0-9]/g, '-')
    .replace(/-+/g, '-')
    .replace(/^-|-$/g, '');
}

async function updateCitySlugs() {
  console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º slug\'—ã –≥–æ—Ä–æ–¥–æ–≤...');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≥–æ—Ä–æ–¥–∞
    const allCities = await db.select().from(cities);
    console.log(`üìç –ù–∞–π–¥–µ–Ω–æ ${allCities.length} –≥–æ—Ä–æ–¥–æ–≤`);
    
    for (const city of allCities) {
      const slugRu = createSlug(city.nameRu, true);
      const slugRo = createSlug(city.nameRo, false);
      
      await db
        .update(cities)
        .set({ 
          slugRu, 
          slugRo 
        })
        .where(eq(cities.id, city.id));
        
      console.log(`‚úÖ ${city.nameRu} ‚Üí slugRu: ${slugRu}, slugRo: ${slugRo}`);
    }
    
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º slug\'—ã —Ä–∞–π–æ–Ω–æ–≤...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–∞–π–æ–Ω—ã
    const allDistricts = await db.select().from(districts);
    console.log(`üìç –ù–∞–π–¥–µ–Ω–æ ${allDistricts.length} —Ä–∞–π–æ–Ω–æ–≤`);
    
    for (const district of allDistricts) {
      const slugRu = createSlug(district.nameRu, true);
      const slugRo = createSlug(district.nameRo, false);
      
      await db
        .update(districts)
        .set({ 
          slugRu, 
          slugRo 
        })
        .where(eq(districts.id, district.id));
        
      console.log(`‚úÖ ${district.nameRu} ‚Üí slugRu: ${slugRu}, slugRo: ${slugRo}`);
    }
    
    console.log('üéâ –í—Å–µ slug\'—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ slug\'–æ–≤:', error);
  }
}

updateCitySlugs();
