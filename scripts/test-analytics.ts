import { db } from '../server/db';
import { analyticsEvents } from '../shared/schema';
import { eq } from 'drizzle-orm';

async function testAnalytics() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–ª–∏–Ω–∏–∫–∏
    const testEvents = [
      { clinicId: '290f3cdd-f7d1-4b69-85bb-6fa1e15ef9b3', eventType: 'view', ipAddress: '127.0.0.1', userAgent: 'Test Script', referrer: 'test' },
      { clinicId: '290f3cdd-f7d1-4b69-85bb-6fa1e15ef9b3', eventType: 'view', ipAddress: '127.0.0.1', userAgent: 'Test Script', referrer: 'test' },
      { clinicId: '290f3cdd-f7d1-4b69-85bb-6fa1e15ef9b3', eventType: 'click_details', ipAddress: '127.0.0.1', userAgent: 'Test Script', referrer: 'test' },
      { clinicId: '290f3cdd-f7d1-4b69-85bb-6fa1e15ef9b3', eventType: 'click_book', ipAddress: '127.0.0.1', userAgent: 'Test Script', referrer: 'test' },
      { clinicId: '290f3cdd-f7d1-4b69-85bb-6fa1e15ef9b3', eventType: 'click_phone', ipAddress: '127.0.0.1', userAgent: 'Test Script', referrer: 'test' },
      { clinicId: '290f3cdd-f7d1-4b69-85bb-6fa1e15ef9b3', eventType: 'click_website', ipAddress: '127.0.0.1', userAgent: 'Test Script', referrer: 'test' },
    ];

    for (const event of testEvents) {
      await db.insert(analyticsEvents).values(event);
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ: ${event.eventType}`);
    }

    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–ª–∏–Ω–∏–∫–∏
    const allEvents = await db
      .select()
      .from(analyticsEvents)
      .where(eq(analyticsEvents.clinicId, '290f3cdd-f7d1-4b69-85bb-6fa1e15ef9b3'));

    console.log(`–í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–ª–∏–Ω–∏–∫–∏: ${allEvents.length}`);
    
    const views = allEvents.filter(e => e.eventType === 'view').length;
    const clickDetails = allEvents.filter(e => e.eventType === 'click_details').length;
    const clickBook = allEvents.filter(e => e.eventType === 'click_book').length;
    const clickPhone = allEvents.filter(e => e.eventType === 'click_phone').length;
    const clickWebsite = allEvents.filter(e => e.eventType === 'click_website').length;
    
    const totalClicks = clickBook + clickPhone + clickWebsite; // –ë–µ–∑ click_details
    
    console.log(`üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`- –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${views}`);
    console.log(`- –ö–ª–∏–∫–∏ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ": ${clickDetails}`);
    console.log(`- –ö–ª–∏–∫–∏ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è": ${clickBook}`);
    console.log(`- –ö–ª–∏–∫–∏ "–ü–æ–∑–≤–æ–Ω–∏—Ç—å": ${clickPhone}`);
    console.log(`- –ö–ª–∏–∫–∏ "–°–∞–π—Ç": ${clickWebsite}`);
    console.log(`- –í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤ (–±–µ–∑ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"): ${totalClicks}`);
    console.log(`- –ö–æ–Ω–≤–µ—Ä—Å–∏—è: ${views > 0 ? ((totalClicks / views) * 100).toFixed(1) : '0'}%`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', error);
  } finally {
    process.exit(0);
  }
}

testAnalytics();
