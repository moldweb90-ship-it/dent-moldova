import { storage } from '../server/storage';

async function initCacheSettings() {
  console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è...');
  
  const defaultCacheSettings = {
    cacheEnabled: 'true',
    cacheStrategy: 'staleWhileRevalidate',
    staticAssetsEnabled: 'true',
    staticAssetsDuration: '30',
    staticAssetsMaxSize: '100',
    apiDataEnabled: 'true',
    apiDataDuration: '15',
    apiEndpoints: 'clinics,cities,districts,services',
    pagesEnabled: 'true',
    pagesDuration: '2',
    pagesPreload: 'true'
  };

  try {
    for (const [key, value] of Object.entries(defaultCacheSettings)) {
      await storage.setSiteSetting(key, value);
      console.log(`‚úÖ ${key}: ${value}`);
    }
    
    console.log('üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

initCacheSettings();
