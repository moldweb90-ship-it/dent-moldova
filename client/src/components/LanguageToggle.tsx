import { useTranslation } from '../lib/i18n';
import { useLocation } from 'wouter';
import { useState, useEffect } from 'react';

export function LanguageToggle() {
  const [, setLocation] = useLocation();
  const [currentPath, setCurrentPath] = useState(window.location.pathname);

  // –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ URL
  useEffect(() => {
    const handleLocationChange = () => {
      setCurrentPath(window.location.pathname);
    };

    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è URL
    window.addEventListener('popstate', handleLocationChange);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ (–¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    setCurrentPath(window.location.pathname);

    return () => {
      window.removeEventListener('popstate', handleLocationChange);
    };
  }, [currentPath]); // –î–æ–±–∞–≤–ª—è–µ–º currentPath –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ URL
  const currentLanguage = currentPath.startsWith('/clinic/ro/') || currentPath === '/ro' ? 'ro' : 'ru';
  console.log('üîÑ LanguageToggle: –¢–µ–∫—É—â–∏–π –ø—É—Ç—å:', currentPath, '–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —è–∑—ã–∫:', currentLanguage);

  const handleLanguageChange = (newLanguage: 'ru' | 'ro') => {
    const path = window.location.pathname; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—É—Ç—å
    console.log('üîÑ LanguageToggle: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ –Ω–∞', newLanguage, '—Ç–µ–∫—É—â–∏–π –ø—É—Ç—å:', path);
    
    if (path.startsWith('/clinic/')) {
      // –î–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü –∫–ª–∏–Ω–∏–∫
      if (path.startsWith('/clinic/ro/')) {
        // –°–µ–π—á–∞—Å —Ä—É–º—ã–Ω—Å–∫–∏–π, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ —Ä—É—Å—Å–∫–∏–π
        if (newLanguage === 'ru') {
          const slug = path.replace('/clinic/ro/', '');
          const newPath = `/clinic/${slug}`;
          console.log('üîÑ LanguageToggle: –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å —Ä—É–º—ã–Ω—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π:', newPath);
          setLocation(newPath);
          setCurrentPath(newPath); // –û–±–Ω–æ–≤–ª—è–µ–º currentPath
          // –û–±–Ω–æ–≤–ª—è–µ–º lang –∞—Ç—Ä–∏–±—É—Ç
          document.documentElement.lang = newLanguage;
        }
      } else {
        // –°–µ–π—á–∞—Å —Ä—É—Å—Å–∫–∏–π, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ —Ä—É–º—ã–Ω—Å–∫–∏–π
        if (newLanguage === 'ro') {
          const slug = path.replace('/clinic/', '');
          const newPath = `/clinic/ro/${slug}`;
          console.log('üîÑ LanguageToggle: –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ —Ä—É–º—ã–Ω—Å–∫–∏–π:', newPath);
          setLocation(newPath);
          setCurrentPath(newPath); // –û–±–Ω–æ–≤–ª—è–µ–º currentPath
          // –û–±–Ω–æ–≤–ª—è–µ–º lang –∞—Ç—Ä–∏–±—É—Ç
          document.documentElement.lang = newLanguage;
        }
      }
    } else if (path === '/' || path === '/ro') {
      // –î–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      if (path === '/ro' && newLanguage === 'ru') {
        // –°–µ–π—á–∞—Å —Ä—É–º—ã–Ω—Å–∫–∞—è –≥–ª–∞–≤–Ω–∞—è, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ —Ä—É—Å—Å–∫—É—é
        console.log('üîÑ LanguageToggle: –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å —Ä—É–º—ã–Ω—Å–∫–æ–π –≥–ª–∞–≤–Ω–æ–π –Ω–∞ —Ä—É—Å—Å–∫—É—é: /');
        setLocation('/');
        setCurrentPath('/'); // –û–±–Ω–æ–≤–ª—è–µ–º currentPath
        // –û–±–Ω–æ–≤–ª—è–µ–º lang –∞—Ç—Ä–∏–±—É—Ç
        document.documentElement.lang = newLanguage;
      } else if (path === '/' && newLanguage === 'ro') {
        // –°–µ–π—á–∞—Å —Ä—É—Å—Å–∫–∞—è –≥–ª–∞–≤–Ω–∞—è, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ —Ä—É–º—ã–Ω—Å–∫—É—é
        console.log('üîÑ LanguageToggle: –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å —Ä—É—Å—Å–∫–æ–π –≥–ª–∞–≤–Ω–æ–π –Ω–∞ —Ä—É–º—ã–Ω—Å–∫—É—é: /ro');
        setLocation('/ro');
        setCurrentPath('/ro'); // –û–±–Ω–æ–≤–ª—è–µ–º currentPath
        // –û–±–Ω–æ–≤–ª—è–µ–º lang –∞—Ç—Ä–∏–±—É—Ç
        document.documentElement.lang = newLanguage;
      }
    } else {
      // –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
      console.log('üîÑ LanguageToggle: –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
    }
  };

  return (
    <div className="flex items-center space-x-1 sm:space-x-2">
      <button
        onClick={() => handleLanguageChange('ru')}
        className={`px-2 py-1 text-xs sm:px-3 sm:py-1 sm:text-sm font-medium rounded-md transition-colors ${
          currentLanguage === 'ru'
            ? 'bg-blue-600 text-white'
            : 'text-gray-700 hover:bg-gray-100'
        }`}
      >
        RU
      </button>
      <button
        onClick={() => handleLanguageChange('ro')}
        className={`px-2 py-1 text-xs sm:px-3 sm:py-1 sm:text-sm font-medium rounded-md transition-colors ${
          currentLanguage === 'ro'
            ? 'bg-blue-600 text-white'
            : 'text-gray-700 hover:bg-gray-100'
        }`}
      >
        RO
      </button>
    </div>
  );
}
