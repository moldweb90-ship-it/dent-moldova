const http = require('http');

// –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –ø—Ä–æ–¥–∞–∫—à–Ω URL
const PROD_URL = 'https://clinici.md'; // –∏–ª–∏ –≤–∞—à –¥–æ–º–µ–Ω

async function checkProdServer() {
  console.log('üîç Checking production server...');
  
  // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞
  console.log('\n1Ô∏è‚É£ Testing server time...');
  await makeRequest(`${PROD_URL}/api/clinics?limit=1`, 'Basic request');
  
  // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä openNow=true
  console.log('\n2Ô∏è‚É£ Testing openNow=true...');
  await makeRequest(`${PROD_URL}/api/clinics?openNow=true&limit=5`, 'openNow=true');
  
  // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä openNow=false
  console.log('\n3Ô∏è‚É£ Testing openNow=false...');
  await makeRequest(`${PROD_URL}/api/clinics?openNow=false&limit=5`, 'openNow=false');
  
  // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞
  console.log('\n4Ô∏è‚É£ Testing without openNow...');
  await makeRequest(`${PROD_URL}/api/clinics?limit=5`, 'No openNow filter');
}

function makeRequest(url, description) {
  return new Promise((resolve, reject) => {
    console.log(`   üì° ${description}`);
    console.log(`   URL: ${url}`);
    
    const req = http.get(url, (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        try {
          const result = JSON.parse(data);
          console.log(`   ‚úÖ Result: ${result.clinics.length} clinics`);
          if (result.clinics.length > 0) {
            console.log(`   First clinic: ${result.clinics[0].nameRu}`);
          }
          resolve(result);
        } catch (error) {
          console.error(`   ‚ùå Parse error: ${error.message}`);
          reject(error);
        }
      });
    });

    req.on('error', (error) => {
      console.error(`   ‚ùå Request error: ${error.message}`);
      reject(error);
    });

    req.setTimeout(10000, () => {
      console.error(`   ‚ùå Timeout`);
      req.destroy();
      reject(new Error('Timeout'));
    });
  });
}

checkProdServer().catch(console.error);
