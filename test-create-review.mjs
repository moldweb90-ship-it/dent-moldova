import Database from 'better-sqlite3';

async function testCreateReview() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–∞...');
    
    const sqlite = new Database('dev.db');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –∫–ª–∏–Ω–∏–∫—É
    const clinic = sqlite.prepare('SELECT id, name_ru FROM clinics LIMIT 1').get();
    
    if (!clinic) {
      console.log('‚ùå –ö–ª–∏–Ω–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      sqlite.close();
      return;
    }
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–∞ –∫–ª–∏–Ω–∏–∫–∞: ${clinic.name_ru} (ID: ${clinic.id})`);
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç–∑—ã–≤
    const reviewData = {
      id: 'test-review-' + Date.now(),
      clinic_id: clinic.id,
      author_name: 'Test User',
      author_email: 'test@example.com',
      quality_rating: 4.5,
      service_rating: 4.0,
      comfort_rating: 3.5,
      price_rating: 4.0,
      average_rating: 4.0,
      comment: '–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–∑—ã–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã',
      status: 'pending',
      ip_address: '127.0.0.1',
      user_agent: 'Test Script',
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    };
    
    const insertSQL = `
      INSERT INTO reviews (
        id, clinic_id, author_name, author_email, quality_rating, 
        service_rating, comfort_rating, price_rating, average_rating, 
        comment, status, ip_address, user_agent, created_at, updated_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `;
    
    const stmt = sqlite.prepare(insertSQL);
    stmt.run(
      reviewData.id,
      reviewData.clinic_id,
      reviewData.author_name,
      reviewData.author_email,
      reviewData.quality_rating,
      reviewData.service_rating,
      reviewData.comfort_rating,
      reviewData.price_rating,
      reviewData.average_rating,
      reviewData.comment,
      reviewData.status,
      reviewData.ip_address,
      reviewData.user_agent,
      reviewData.created_at,
      reviewData.updated_at
    );
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–∑—ã–≤ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–∑—ã–≤ —Å–æ–∑–¥–∞–ª—Å—è
    const reviews = sqlite.prepare('SELECT * FROM reviews').all();
    console.log(`üìä –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤ –≤ –±–∞–∑–µ: ${reviews.length}`);
    
    if (reviews.length > 0) {
      console.log('üìã –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–∑—ã–≤:');
      console.log(`  - ID: ${reviews[reviews.length - 1].id}`);
      console.log(`  - –ö–ª–∏–Ω–∏–∫–∞: ${reviews[reviews.length - 1].clinic_id}`);
      console.log(`  - –†–µ–π—Ç–∏–Ω–≥: ${reviews[reviews.length - 1].average_rating}`);
      console.log(`  - –°—Ç–∞—Ç—É—Å: ${reviews[reviews.length - 1].status}`);
    }
    
    sqlite.close();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞:', error);
  }
}

testCreateReview();
